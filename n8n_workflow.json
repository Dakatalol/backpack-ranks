{
  "name": "Backpack Volume Tracker",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 8,20 * * *"
            }
          ]
        }
      },
      "id": "schedule-morning-evening",
      "name": "Schedule (8 AM & 8 PM)",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "command": "python n8n_tracker.py"
      },
      "id": "execute-python",
      "name": "Execute Python Script",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.status }}",
              "operation": "equals",
              "value2": "success"
            }
          ]
        }
      },
      "id": "if-success",
      "name": "Check if Success",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [650, 300]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.analysis.difficulty_score }}",
              "operation": "smaller",
              "value2": 95
            }
          ]
        }
      },
      "id": "if-good-time",
      "name": "Check if Good Time to Farm",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [850, 200]
    },
    {
      "parameters": {
        "jsCode": "const data = $input.first().json;\nconst volume = data.current.rank_1000_volume;\nconst volumeFormatted = `$${(volume / 1000000).toFixed(2)}M`;\nconst score = data.analysis.difficulty_score;\nconst change = data.analysis.volume_change_percent;\nconst recommendation = data.analysis.recommendation;\nconst user = data.current.user_at_rank_1000;\n\nlet emoji = 'üéØ';\nif (score < 80) emoji = 'üéØ';\nelse if (score < 95) emoji = '‚úÖ';\nelse if (score < 105) emoji = '‚ûñ';\nelse if (score < 120) emoji = '‚ö†Ô∏è';\nelse emoji = 'üî¥';\n\nreturn {\n  json: {\n    message: `${emoji} **Backpack Volume Alert**\\n\\n` +\n             `${recommendation}\\n\\n` +\n             `üìä **Current Rank 1000:** ${volumeFormatted}\\n` +\n             `üë§ **User:** ${user}\\n` +\n             `üìà **Difficulty Score:** ${score}/100\\n` +\n             `üìâ **Change:** ${change > 0 ? '+' : ''}${change}%\\n\\n` +\n             `You need **more than ${volumeFormatted}** in trading volume to be in the top 1000.`\n  }\n};"
      },
      "id": "format-success-message",
      "name": "Format Success Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1050, 200]
    },
    {
      "parameters": {
        "jsCode": "const data = $input.first().json;\nconst message = data.message || 'Unknown error';\n\nreturn {\n  json: {\n    error_message: `‚ö†Ô∏è **Backpack Volume Tracker Error**\\n\\n` +\n                   `Failed to collect rank 1000 data.\\n\\n` +\n                   `**Error:** ${message}\\n\\n` +\n                   `Please check:\\n` +\n                   `‚Ä¢ Python script is accessible\\n` +\n                   `‚Ä¢ Internet connection is active\\n` +\n                   `‚Ä¢ Backpack API is responding`\n  }\n};"
      },
      "id": "format-error-message",
      "name": "Format Error Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [850, 400]
    },
    {
      "parameters": {
        "chatId": "YOUR_TELEGRAM_CHAT_ID",
        "text": "={{ $json.message }}",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "send-telegram-success",
      "name": "Send Telegram Alert",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [1250, 200],
      "credentials": {
        "telegramApi": {
          "id": "YOUR_TELEGRAM_CREDENTIAL_ID",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "YOUR_TELEGRAM_CHAT_ID",
        "text": "={{ $json.error_message }}",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "send-telegram-error",
      "name": "Send Error Alert",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [1050, 400],
      "credentials": {
        "telegramApi": {
          "id": "YOUR_TELEGRAM_CREDENTIAL_ID",
          "name": "Telegram account"
        }
      }
    }
  ],
  "connections": {
    "Schedule (8 AM & 8 PM)": {
      "main": [
        [
          {
            "node": "Execute Python Script",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Python Script": {
      "main": [
        [
          {
            "node": "Check if Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Success": {
      "main": [
        [
          {
            "node": "Check if Good Time to Farm",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Error Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Good Time to Farm": {
      "main": [
        [
          {
            "node": "Format Success Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Success Message": {
      "main": [
        [
          {
            "node": "Send Telegram Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Error Message": {
      "main": [
        [
          {
            "node": "Send Error Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "1",
  "id": "backpack-simple-tracker"
}

